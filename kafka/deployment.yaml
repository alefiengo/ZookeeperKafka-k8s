apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: zookeeper-kafka
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      enableServiceLinks: false
      containers:
        - name: kafka
          imagePullPolicy: IfNotPresent
          image: confluentinc/cp-kafka:latest
          ports:
            - containerPort: 9092
              name: http-external
              protocol: TCP
            - containerPort: 29092
              name: http-internal
              protocol: TCP
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_NUM_PARTITIONS
              value: "1"
            - name: KAFKA_LOG_CLEANUP_POLICY
              value: "compact"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka-data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data-pvc
